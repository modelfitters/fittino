# $Id$ #

################################################################################
#                                                                              #
# Project     Fittino - A SUSY Parameter Fitting Package                       #
#                                                                              #
# File        README                                                           #
#                                                                              #
# Description Useful information about the program setup and installation      #
#                                                                              #
# Authors     Bjoern Sarrazin     <sarrazin@physik.uni-bonn.de>                #
#             Mathias Uhlenbrock  <uhlenbrock@physik.uni-bonn.de>              #
#                                                                              #
# Licence     This program is free software; you can redistribute it and/or    #
#             modify it under the terms of the GNU General Public License as   #
#             published by the Free Software Foundation; either version 3 of   #
#             the License, or (at your option) any later version.              #
#                                                                              #
################################################################################

Fittino is written in C++03 (http://www.iso.org/iso/iso_catalogue/catalogue_ics/catalogue_detail_ics.htm?ics1=35&ics2=60&ics3=&csnumber=38110).

It is designed to run on Unix-like operating systems.
It has successfully been tested on Scientific Linux 6 and OS X 10.9.

1. Third party software
------------------------

- The following external programs/libraries are mandatory in order to compile Fittino:

  - The build system generator CMake (http://www.cmake.org).
  - A build tool supported by CMake. Fittino has successfully been build using GNU make and Xcode.
  - A C++ compiler. Fittino has successfully been compiled using compilers from the GNU Compiler Collection (http://gcc.gnu.org) and the Clang project ( clang.llvm.org ).
  - The Boost C++ libraries (http://www.boost.org).
  - The data analysis framework ROOT (http://root.cern.ch/drupal).

- The search paths for external software can be influenced by setting the dedicated CMake variables

  BOOST_ROOT 
  ROOT_CONFIG_DIR
  GSL_CONFIG_DIR
  HIGGSBOUNDS_INSTALLATION_PATH
  HIGGSSIGNALS_INSTALLATION_PATH
  FEYNHIGGS_INSTALLATION_PATH
  SLHAEA_INSTALLATION_PATH 
  LHAPDF_INSTALLATION_PATH 

  and/or via the usual general CMake and environmental variables.
  
  Note: CMake variables can be set using CMake arguments in two ways:
    -  Definition of the variables on the command line ( -D<VARIABLE_NAME>=<VARIABLE_VALUE> )
    -  Specifying an initial cache file ( -C<PATH_TO_FILE> ) in which the variables are set.
 
2. Installation
---------------

- Change to the build directory

  cd build

- In order to configure cmake type

  cmake ..

  If this fails, it is most likly due to a library which is needed by Fittino
  (see Requirements) but not found by cmake. In this case edit CMakeLists.txt
  in the Fittino main directory to set the locations of the required libraries
  manually

- To build Fittino type

  make

  If the compilation is successful an executable called "fittino" is produced in
  build/sources/kernel

- To install Fittino type

  make install

  This copies the executable "fittino" to bin/fittino.
