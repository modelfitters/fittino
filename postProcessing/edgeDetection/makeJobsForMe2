#!/bin/bash

# ####################################################
# Create the batch jobs
# ./makeJobsForMe X
# Input: X=1 creation of the scripts and directories
# Input: X=2 job sent to batch
# ####################################################



if [[ $1 == 1 ]]
    then

    if [ ! -d "$job_directory_PLOTS1D" ]; then
	mkdir -p  $job_directory_PLOTS1D
    fi

    cd $job_directory_PLOTS1D


    cp $working_directory/edgeDetection/ChainBuilder2.C .
    cp $working_directory/edgeDetection/edgeChain2 .
    cp $working_directory/edgeDetection/EdgeDetectionAlgorithm.C .
    cp $working_directory/edgeDetection/EdgeDetection.C .
    cp $working_directory/edgeDetection/EdgeDetection.h .
    cp $working_directory/edgeDetection/edgeScript2 .
    cp $working_directory/edgeDetection/job_edge2 .

#######################################################
# For each set of observables

    for obs in {0..17}; do

	if [ ! -d $obs ]
	    then 
	    mkdir $obs
	fi

	echo ----- OBS $obs -----

	minChi2=0
	maxChi2=50

	if [[ $obs == 0 ]]; then
	    minChi2=25
	    maxChi2=50
	fi

	if [[ $obs == 1 ]]; then
	    minChi2=5
	    maxChi2=30
	fi

	if [[ $obs == 2 ]]; then
	    minChi2=10
	    maxChi2=40
	fi

	if [[ $obs == 3 ]]; then
	    minChi2=0
	    maxChi2=30
	fi

	if [[ $obs == 4 ]]; then
	    minChi2=0
	    maxChi2=26
	fi

	if [[ $obs == 5 ]]; then
	    minChi2=30
	    maxChi2=50
	fi

	if [[ $obs == 6 ]]; then
	    minChi2=30
	    maxChi2=50
	fi

	if [[ $obs == 7 ]]; then
	    minChi2=25
	    maxChi2=50
	fi

	if [[ $obs == 8 ]]; then
	    minChi2=25
	    maxChi2=50
	fi

	if [[ $obs == 9 ]]; then
	    minChi2=20
	    maxChi2=50
	fi

	if [[ $obs == 10 ]]; then
	    minChi2=20
	    maxChi2=50
	fi

	if [[ $obs == 11 ]]; then
	    minChi2=5
	    maxChi2=50
	fi

	if [[ $obs == 12 ]]; then
	    minChi2=5
	    maxChi2=50
	fi

	if [[ $obs == 16 ]]; then
	    minChi2=30
	    maxChi2=50
	fi

	if [[ $obs == 17 ]]; then
	    minChi2=5
	    maxChi2=50
	fi


###################################
# Loop on the models
# Fix the ranges of chi2 and parameters

	for model in CMSSM NUHM1 NUHM2; do

	    echo ..... $model .....
	    
	    if [ ! -d $obs/$model ]
		then
		mkdir $obs/$model
	    fi

	    if [[ $model == CMSSM ]]
		then
		modelNum=0;
		minA0=-10000
		maxA0=10000
		maxM0=10000
		minM0=0
		minM12=0
		maxM12=10000
		minTANBETA=0
		maxTANBETA=60
		minMASSTOP=165
		maxMASSTOP=180
	    fi

	    if [[ $model == NUHM1 ]]
		then
		modelNum=1;
		minA0=-10000
		maxA0=10000
		maxM0=10000
		minM0=0
		minM12=0
		maxM12=10000
		minTANBETA=0
		maxTANBETA=65
		minMASSTOP=165
		maxMASSTOP=180
	    fi

	    if [[ $model == NUHM2 ]]
		then
		modelNum=2;
		minA0=-10000
		maxA0=10000
		maxM0=10000
		minM0=0
		maxM12=10000
		minM12=0
		maxTANBETA=65
		minTANBETA=0
		minMASSTOP=165
		maxMASSTOP=180
	    fi

	    newJob=job_edge\_$obs\_$model
	    cp job_edge2 $newJob


	    sed -i s/VAR10/$maxM12/g $newJob
	    sed -i s/VAR11/$minM12/g $newJob
	    sed -i s/VAR12/$maxTANBETA/g $newJob
	    sed -i s/VAR13/$minTANBETA/g $newJob
	    sed -i s/VAR14/$maxMASSTOP/g $newJob
	    sed -i s/VAR15/$minMASSTOP/g $newJob
	    
	    sed -i s/VAR1/$minChi2/g $newJob
	    sed -i s/VAR2/$maxChi2/g $newJob
	    sed -i s/VAR3/$model/g $newJob
	    sed -i s/VAR4/$obs/g $newJob
	    sed -i s/VAR5/$modelNum/g $newJob
	    sed -i s/VAR6/$maxA0/g $newJob
	    sed -i s/VAR7/$minA0/g $newJob
	    sed -i s/VAR8/$maxM0/g $newJob
	    sed -i s/VAR9/$minM0/g $newJob

	    sed -i s/WHERE_IS_SETUP/$whereIsSetupForSed/g $newJob

	    mv $newJob $obs/

	done

    done
fi





if [[ $1 == 2 ]]
    then
    cd $job_directory_PLOTS1D

#############
# Observables
    for obs in {0..17}; 
      do
#############
# Models
      for model in CMSSM NUHM1 NUHM2; 
	do
	newJob=job_edge\_$obs\_$model

# if [ ! -d $fittinoPath/postProcessing/edgeDetection/$obs/ ]
# then
# mkdir $fittinoPath/postProcessing/edgeDetection/$obs/
# fi

	cd $job_directory_PLOTS1D/$obs/
	qsub $newJob
      done
    done

fi

